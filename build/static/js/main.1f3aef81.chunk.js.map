{"version":3,"sources":["Components/ContactList/ContactList.module.css","Components/Filter/Filter.module.css","redux/contacts/contacts-actions.js","Components/ContactForm/ContactForm.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","Components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuidv4","deleteFromContacts","changeFilter","INITIAL_STATE","ContactForm","nameInputId","numberInputId","state","handleChange","evt","currentTarget","value","setState","handleSubmit","preventDefault","props","contacts","find","contact","alert","reset","onSubmit","className","styles","contactForm","this","htmlFor","input","type","onChange","placeholder","Component","connect","items","dispatch","contactsActions","getVisibleContacts","allContacts","filter","normalizedFilter","toLowerCase","includes","onDeleteFromContacts","map","ContactListItem","ContactsListText","ContactsListButton","onClick","e","target","App","style","width","margin","createReducer","combineReducers","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.1f3aef81.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactListItem\":\"ContactList_ContactListItem__14o34\",\"ContactsListText\":\"ContactList_ContactsListText__2_Iht\",\"ContactsListButton\":\"ContactList_ContactsListButton__2wEPP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__35l_Z\",\"input\":\"Filter_input__2CEsa\"};","import { v4 as uuidv4 } from \"uuid\";\n// import types from \"./contacts-types\";\nimport { createAction } from \"@reduxjs/toolkit\";\n\n/*Redux Tookit*/\n\nconst addContact = createAction(\"contacts/add\", ({ name, number }) => ({\n  payload: {\n    id: uuidv4(),\n    name,\n    number,\n  },\n}));\n\nconst deleteFromContacts = createAction(\"contacts/delete\");\n\nconst changeFilter = createAction(\"contacts/changeFilter\");\n\n/*Redux*/\n\n// const addContact = ({ name, number }) => ({\n//   type: types.ADD,\n//   payload: {\n//     id: uuidv4(),\n//     name: name,\n//     number: number,\n//   },\n// });\n\n// const deleteFromContacts = (contactListId) => ({\n//   type: types.DELETE,\n//   payload: contactListId,\n// });\n\n// const changeFilter = (value) => ({\n//   type: types.CHANGE_FILTER,\n//   payload: value,\n// });\n\nexport default { addContact, deleteFromContacts, changeFilter };\n","import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport styles from \"./ContactForm.module.css\";\nimport { connect } from \"react-redux\";\nimport contactsActions from \"../../redux/contacts/contacts-actions\";\n\nexport const INITIAL_STATE = {\n  name: \"\",\n  number: \"\",\n};\n\nclass ContactForm extends Component {\n  nameInputId = uuidv4();\n  numberInputId = uuidv4();\n\n  state = { ...INITIAL_STATE };\n\n  handleChange = (evt) => {\n    // console.log(evt.currentTarget.value);\n    const { name, value } = evt.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (evt) => {\n    evt.preventDefault();\n\n    const { name } = this.state;\n    const { contacts } = this.props;\n\n    if (contacts.find((contact) => contact.name === name)) {\n      alert(`${name} is already in contacts`);\n      this.reset();\n      return;\n    } else {\n      this.props.onSubmit(this.state);\n      this.reset();\n    }\n  };\n\n  reset = () => {\n    this.setState({ ...INITIAL_STATE });\n  };\n  // ==================\n\n  render() {\n    return (\n      <>\n        <form className={styles.contactForm} onSubmit={this.handleSubmit}>\n          <label htmlFor={this.nameInputId}>\n            Name\n            <input\n              className={styles.input}\n              type=\"text\"\n              name=\"name\"\n              value={this.state.name}\n              onChange={this.handleChange}\n              id={this.nameInputId}\n              placeholder=\"enter name\"\n            />\n          </label>\n\n          <label htmlFor={this.numberInputId}>\n            Number\n            <input\n              className={styles.input}\n              type=\"tel\"\n              name=\"number\"\n              value={this.state.number}\n              onChange={this.handleChange}\n              id={this.numberInputId}\n              placeholder=\"enter number\"\n            />\n          </label>\n\n          <button className={styles.addContact} type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  contacts: state.contacts.items,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (payload) => dispatch(contactsActions.addContact(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactList.module.css\";\nimport contactsActions from \"../../redux/contacts/contacts-actions\";\n\nconst ContactList = ({ contacts, onDeleteFromContacts }) => {\n  return (\n    <>\n      <ul>\n        {contacts.map(({ id, name, number }) => (\n          <li key={id} className={styles.ContactListItem}>\n            <p className={styles.ContactsListText}>\n              {name}:{number}\n            </p>\n            <button\n              className={styles.ContactsListButton}\n              onClick={() => onDeleteFromContacts(id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nconst getVisibleContacts = (allContacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n\n  return allContacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter)\n  );\n};\n\n// const mapStateToProps = (state) => {\n//   const { items, filter } = state.contacts;\n//   const visibleContacts = getVisibleContacts(items, filter);\n//   return { contacts: visibleContacts };\n// };\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n  contacts: getVisibleContacts(items, filter),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDeleteFromContacts: (id) =>\n    dispatch(contactsActions.deleteFromContacts(id)),\n});\n\nContactList.propTypes = {\n  contacts: PropTypes.array,\n  onDeleteFromContacts: PropTypes.func,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Filter.module.css\";\nimport contactsActions from \"../../redux/contacts/contacts-actions\";\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <>\n      <label className={styles.filter}>\n        Find contact by name\n        <input\n          className={styles.input}\n          type=\"text\"\n          value={value}\n          onChange={onChange}\n        ></input>\n      </label>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChange: (e) => dispatch(contactsActions.changeFilter(e.target.value)),\n});\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React, { Component } from \"react\";\nimport ContactForm from \"./Components/ContactForm/\";\nimport ContactList from \"./Components/ContactList/\";\nimport Filter from \"./Components/Filter/\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div style={{ width: \"300px\", margin: \"0 auto\" }}>\n        <h1>Phonebook</h1>\n        <ContactForm />\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\n// import types from \"./contacts-types\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport contactsActions from \"./contacts-actions\";\n\n/*Redux Tookit*/\n\nconst items = createReducer([], {\n  [contactsActions.addContact]: (state, { payload }) => [...state, payload],\n  [contactsActions.deleteFromContacts]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer(\"\", {\n  [contactsActions.changeFilter]: (state, { payload }) => payload,\n});\n\n/*Redux*/\n\n// const items = (state = [], { type, payload }) => {\n//   switch (type) {\n//     case types.ADD:\n//       return [...state, payload];\n\n//     case types.DELETE:\n//       return state.filter(({ id }) => id !== payload);\n\n//     default:\n//       return state;\n//   }\n// };\n\n// const filter = (state = \"\", { type, payload }) => {\n//   switch (type) {\n//     case types.CHANGE_FILTER:\n//       return payload;\n\n//     default:\n//       return state;\n//   }\n// };\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","// import { createStore, combineReducers } from \"redux\";\n// import { composeWithDevTools } from \"redux-devtools-extension\";\nimport contactsReducer from \"./contacts/contacts-reducer\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\n/*Redux*/\n\n// const rootReducer = combineReducers({\n//   contacts: contactsReducer,\n// });\n\n// const store = createStore(rootReducer, composeWithDevTools());\n\n/*Redux Tookit*/\n\nconst contactsPersistConfig = {\n  key: \"contacts\",\n  storage,\n  blacklist: [\"filter\"],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\n  },\n\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"modern-normalize/modern-normalize.css\";\n\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={\"Loading\"} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__1I-Eb\",\"addContact\":\"ContactForm_addContact__oiTcK\",\"input\":\"ContactForm_input__3dHde\"};"],"sourceRoot":""}